# a crear 
üßæ √çndice t√©cnico
Arquitectura del sistema

Diagrama de capas

Estructura de carpetas y namespaces

Modelo de base de datos (con diagrama ER)

Conexi√≥n a SQL Server LocalDB

Detalles de cada clase (BL, DAL, Entidades)

Reportes RDLC y configuraci√≥n

Recomendaciones de escalabilidad

Licencia y cr√©ditos

üß© Ejemplo de descripci√≥n t√©cnica
ProductoDAL.vb: Esta clase contiene m√©todos para interactuar con la tabla Productos. Utiliza SqlCommand y SqlDataAdapter para ejecutar consultas. Se recomienda encapsular la l√≥gica de conexi√≥n en la clase Conexion.vb para mantener el desacoplamiento.

# Documentaci√≥n T√©cnica ‚Äì InventarioVBNet

## 1. Descripci√≥n general
Este documento describe la arquitectura, componentes y l√≥gica del sistema **InventarioVBNet**, una app de escritorio construida con VB.NET y SQL Server LocalDB.

## 2. Arquitectura
- **Patr√≥n utilizado:** Arquitectura en capas
  - **Presentaci√≥n:** Formulario Windows Forms
  - **Negocio:** L√≥gica de validaci√≥n y flujo
  - **Datos:** Acceso a base de datos con SQLClient
  - **Entidades:** Clases modelo del sistema

## 3. Diagrama de capas

[Presentacion] --> [Negocio] --> [Datos] --> [SQL Server] ‚Üë ‚Üì [Entidades] <-- intercambio de objetos -->


## 4. Estructura del proyecto

## 5. Base de datos
- DB: `InventarioDB`
- Tablas: `Productos`, `Proveedores`, `Categorias`, `MovimientosInventario`
- Relaci√≥n: Cada producto pertenece a una categor√≠a y puede estar vinculado a un proveedor.

## 6. Componentes clave

### ProductoBL.vb
- M√©todos: `ObtenerTodos()`, `Agregar()`, `Actualizar()`, `Eliminar()`
- Validaciones: Stock negativo, campos obligatorios

### ProductoDAL.vb
- Acceso SQL: `SELECT`, `INSERT`, `UPDATE`
- Conexi√≥n gestionada por `Conexion.vb`

### MovimientoInventarioBL.vb
- M√©todos: `RegistrarEntrada()`, `RegistrarSalida()`
- Utiliza `ProductoDAL` para actualizar stock

## 7. Reportes
- Tipo: RDLC
- Fuente: `dsProductos`
- Exportable: PDF, Excel
- Vista previa en `ReportViewer`

## 8. Recomendaciones
- Modularizar futuras funcionalidades (usuarios, seguridad)
- Migrar a SQL Server remoto para multiusuario
- Aplicar CI/CD con GitHub Actions

## 9. Licencia
MIT License: C√≥digo abierto para uso y modificaci√≥n educativa.

## 10. Cr√©ditos
Desarrollado por Hern√°n ‚Äî inspirado en principios de accesibilidad y arquitectura limpia.
